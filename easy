EASY ONLY - All Database

*a lot of these solutions were slow - take a look and try to find a faster solution after

1) Average Selling Price - did not get

2) Product Sales Analysis I

SELECT product_name, year, price
FROM product JOIN sales USING (product_id);

3) Product Sales Analysis II - database

SELECT product_id, SUM(quantity) AS total_quantity
FROM Sales JOIN Product USING(product_id)
GROUP BY Sales.product_id;

4) Game Play Analysis I

SELECT player_id, MIN(event_date) AS first_login
FROM Activity
GROUP BY player_id;

5) Big Countries

SELECT name, population, area
FROM World
WHERE area > 3000000 OR population > 25000000;

6) Immediate Food Delivery I - seems medium hard?

7) Shortest Distance in a Line - hmm new thing to learn?

8) Reformat Department Table - new thing to learn.

9) Number of Comments per Post - medium level

10) Actors and Directors Who Cooperated At Least Three Times

11) Article Views I 

SELECT DISTINCT author_id AS id
FROM Views
WHERE author_id = viewer_id
ORDER BY id ASC;

12) Swap Salary - new thing to learn

13) Sales Analysis I - medium difficulty

14) Find Customer Referee - easy redo

SELECT name
FROM customer
WHERE referee_id IS NULL OR referee_id <> 2;

15) Customer Placing the Largest Number of Orders - somewhat easy - REDO

SELECT customer_number
FROM orders
GROUP BY customer_number
ORDER BY COUNT(*) DESC
LIMIT 1;

16) Queries Quality and Percentage - poor_query_percentage do not fully get - REDO

SELECT query_name, ROUND(AVG(rating/position),2) AS quality, ROUND(AVG(rating <3)*100, 2) AS poor_query_percentage
FROM Queries
GROUP BY query_name
ORDER BY quality DESC;

17) Not Boring Movies

SELECT id, movie, description, rating
FROM cinema
WHERE description <> 'boring' AND (id%2) <> 0
ORDER BY rating DESC;

18) Triangle Judgement - recursion - **need to learn

19) Employee Bonus - REDO - LEFT JOIN to keep the NULLS, OR bonus IS NULL to show the nulls

SELECT name, bonus
FROM Employee LEFT JOIN Bonus USING(empId)
WHERE bonus < 1000 OR bonus IS NULL;

20) Project Employees I

SELECT project_id, CAST(AVG(experience_years) AS DECIMAL (10,2)) AS average_years
FROM Project JOIN Employee USING (employee_id)
GROUP BY project_id;

*****
CAST AS DECIMAL (10,2) - means 10 digits in total, with 2 after the decimal.

CREATE TABLE dbo.MyTable  
(  
  MyDecimalColumn decimal(5,2)  
,MyNumericColumn numeric(10,5)
  
);  
  
Answer:

 MyDecimalColumn                         MyNumericColumn  
--------------------------------------- ---------------------------------------  
123.00                                  12345.12000  


21) Consecutive Available Seats - a bit harder

22) Reported Posts - redo - DISTINCT post_id - why do you need?

SELECT extra AS report_reason, COUNT(DISTINCT post_id) AS report_count
FROM Actions
WHERE action_date = '2019-07-04' AND action = 'report'
GROUP BY extra;

23) Sales Person - does not seem too hard.... REDO

SELECT salesperson.name
FROM salesperson 
WHERE salesperson.sales_id NOT IN(
                                  SELECT salesperson.sales_id
                                  FROM salesperson JOIN orders USING (sales_id) JOIN company USING (com_id)
                                  WHERE company.name = 'RED');

24) Duplicate Emails

SELECT Email
FROM Person
GROUP BY Email
HAVING COUNT(*) > 1;

25) Combine Two Tables

SELECT FirstName, LastName, City, State
FROM Person LEFT JOIN Address USING (PersonId);   /*LEFT JOIN - to keep the NULLS*/

26) Game Play Analysis II





13) Sales Analysis III - medium difficulty? - involves dates

14) Employees Earning More Than Their Managers - a bit tricky, need to think about it after studying solution

15) Customers Who Never Order

SELECT Name AS Customers
FROM Customers 
WHERE Customers.Id NOT IN (
                            SELECT CustomerId
                            FROM Orders);
                            
16) Biggest Single Number - medium hard - have to redo again... need to SUBQUERY THE FROM.... why?

SELECT MAX(num) AS num
FROM (SELECT num
      FROM my_numbers
      GROUP BY num
      HAVING COUNT(*) <= 1) AS a;
      
17) Rising Temperature - involves dates

18) Delete Duplicate Emails - sort of easy

19) User Activity for the Past 30 Days II

20) Second Highest Salary

SELECT MAX(Salary) AS SecondHighestSalary
FROM Employee E1
WHERE E1.Salary < (
                   SELECT MAX(Salary)
                   FROM Employee E2);
                   
DONE! THAT IS ALL THE EASY LEETCODE QUESTIONS - CONGRATULATIONS!






