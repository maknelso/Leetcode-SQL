Difficulty: Medium
48 questions

Do: 14 medium questions (29%)

Amazon tag medium - 9:

A*177. Nth Highest Salary -> Looks like you have to memorize this one
# Write your MySQL query statement below
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT
BEGIN
  DECLARE M INT;
  SET M = N - 1;
  RETURN (SELECT DISTINCT Salary 
          FROM Employee
          ORDER BY Salary DESC
          LIMIT 1 OFFSET M);
END

A, W*178. Rank Scores (Amazon tag) -> sometimes have to use MS SQL Server
/* Write your T-SQL query statement below */
SELECT score,
DENSE_RANK() OVER(ORDER BY Score DESC) AS Rank
FROM Scores
ORDER BY score DESC, Rank ASC;

A*180. Consecutive Numbers (Amazon tag) -> does not seem that bad
/* Write your T-SQL query statement below */
-- Consecutive means ID of Num are next to each other.
-- Use 3 aliases for this table Logs and then check whether 3 consecutive numbers are all the same
-- Check Ids are consecutive
-- Check Num from all 3 Logs l1, l2, l3 are the same
SELECT DISTINCT l1.Num AS ConsecutiveNums
FROM Logs l1, Logs l2, Logs l3
WHERE l1.Id = l2.Id - 1 AND l2.Id = l3.Id - 1
AND l1.Num = l2.Num AND l2.Num = l3.num;

A*184. Department Highest Salary (Amazon tag) -> not that bad for non-window function
-- Non-Window function
# Write your MySQL query statement below
-- IN subquery
-- query the highest salary in each department
-- there may be multiple employees with same salary, so do not include employee name

SELECT Department.name AS 'Department', Employee.name AS 'Employee', Salary
FROM Employee JOIN Department ON Employee.DepartmentId = Department.Id
WHERE (Employee.DepartmentId, Salary) IN 
(SELECT DepartmentId, MAX(Salary)
 FROM Employee 
 GROUP BY DepartmentId);

-- Window function
# Write your MySQL query statement below
SELECT Department.Name AS Department, T.Name AS Employee, T.Salary
FROM (SELECT Name, Salary,
      RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS num, 
      DepartmentId
      FROM Employee) AS T
JOIN Department ON T.DepartmentId = Department.Id
WHERE T.num = 1;

A*570. Managers with at Least 5 Direct Reports (Amazon tag) -> not too bad
# Write your MySQL query statement below
SELECT Name 
FROM Employee e1 JOIN (SELECT ManagerId
                       FROM Employee
                       GROUP BY ManagerId
                       HAVING COUNT(ManagerId) >= 5) AS e2
                  ON e1.Id = e2.ManagerId;

A*626. Exchange Seats (Amazon tag)



A*1045. Customers Who Bought All Products (Amazon tag)
A*1070. Product Sales Analysis III (Amazon tag)
A*1421. NPV Queries (Amazon tag)

Amazon tag hard - 5:
185. Department Top Three Salaries
262. Trips and Users
579. Find Cumulative Salary of an Employee
601. Human Traffic of Stadium
618. Students Report by Geography

Other common medium - 5:
608. Tree Node (no Amazon tag)
1132. Reported Posts II (no Amazon tag)
1212. Team Scores in Football Tournament (no Amazon tag)
1270. All People Report to the Given Manager (no Amazon tag)
1341. Moving Rating (no Amazon tag)
